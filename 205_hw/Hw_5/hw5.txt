HW #5
Krista Mar

question 1: What is the output of \dt?
dvdrental=# \d
                     List of relations
 Schema |            Name            |   Type   |  Owner
--------+----------------------------+----------+----------
 public | actor                      | table    | postgres
 public | actor_actor_id_seq         | sequence | postgres
 public | actor_info                 | view     | postgres
 public | address                    | table    | postgres
 public | address_address_id_seq     | sequence | postgres
 public | category                   | table    | postgres
 public | category_category_id_seq   | sequence | postgres
 public | city                       | table    | postgres
 public | city_city_id_seq           | sequence | postgres
 public | country                    | table    | postgres
 public | country_country_id_seq     | sequence | postgres
 public | customer                   | table    | postgres
 public | customer_customer_id_seq   | sequence | postgres
 public | customer_list              | view     | postgres
 public | film                       | table    | postgres
 public | film_actor                 | table    | postgres
 public | film_category              | table    | postgres
 public | film_film_id_seq           | sequence | postgres
 public | film_list                  | view     | postgres
 public | inventory                  | table    | postgres
 public | inventory_inventory_id_seq | sequence | postgres
 public | language                   | table    | postgres
 public | language_language_id_seq   | sequence | postgres
 public | nicer_but_slower_film_list | view     | postgres
 public | payment                    | table    | postgres
 public | payment_p2007_01           | table    | postgres
 public | payment_p2007_02           | table    | postgres
 public | payment_p2007_03           | table    | postgres
 public | payment_p2007_04           | table    | postgres
 public | payment_p2007_05           | table    | postgres
 public | payment_p2007_06           | table    | postgres
 public | payment_payment_id_seq     | sequence | postgres
 public | rental                     | table    | postgres
 public | rental_rental_id_seq       | sequence | postgres
 public | sales_by_film_category     | view     | postgres
 public | sales_by_store             | view     | postgres
 public | staff                      | table    | postgres
 public | staff_list                 | view     | postgres
 public | staff_staff_id_seq         | sequence | postgres
 public | store                      | table    | postgres
 public | store_store_id_seq         | sequence | postgres
(41 rows)

Question 2: What is the schema for the customer table?
Different attributes of dvd rentral customers.

  Table "public.customer"
   Column    |            Type             |                           Modifiers
-------------+-----------------------------+----------------------------------------------------------------
 customer_id | integer                     | not null default nextval('customer_customer_id_seq'::regclass)
 store_id    | smallint                    | not null
 first_name  | character varying(45)       | not null
 last_name   | character varying(45)       | not null
 email       | character varying(50)       |
 address_id  | smallint                    | not null
 activebool  | boolean                     | not null default true
 create_date | date                        | not null default ('now'::text)::date
 last_update | timestamp without time zone | default now()
 active      | integer                     |

Question 3:  All of the output give an estimated start-up cost, estimated total cost, estimated number of rows output by this plan node, and estimated average width of rows output by this plan node. 

Question 4: What is the difference between the plans for the Partitioned table and the union query? Why do you think this difference exists?

The partitioned table first filters by the payment date filter on payments, scans by the two different payment IDâ€™s (e..g payment_p2007_01 and payment_p2007_02)  and then filters for the timestamp again. The union query scans each payment ID and then filters by the payment date.  

The width of the outputs for the portioned table scans are smaller because the time was already filtered in the payment table. 


What join algorithm is used for the inner join?
It uses the Hash join. 